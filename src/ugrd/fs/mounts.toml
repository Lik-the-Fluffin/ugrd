binaries = [
  "lsblk",
  "blkid",
  "mount",
  "sleep",
  "umount",
  "mkdir",
]

mount_wait = false
mount_retries = 5
autodetect_root = true
autodetect_root_dm = true
autodetect_root_luks = true
autodetect_root_lvm = true
autodetect_root_raid = true
autodetect_init_mount = true
late_fstab = "/etc/fstab.late"

[imports.config_processing]
"ugrd.fs.mounts" = [ "_process_mounts_multi", "_process_late_mounts_multi", "_process_mount_timeout" ]

[imports.build_pre]
"ugrd.fs.mounts" = [ "get_mounts_info", "get_virtual_block_info", "get_blkid_info",
		     "autodetect_root", "autodetect_mounts", "autodetect_root_dm", "autodetect_init_mount" ]

[imports.build_tasks]
"ugrd.fs.mounts" = [ "export_mount_info", "export_root_target" ]

[imports.build_final]
"ugrd.fs.mounts" = [ "generate_fstab" ]

[imports.init_pre]
"ugrd.fs.mounts" = [ "mount_base" ]

[imports.init_early]
"ugrd.fs.mounts" = [ "mount_fstab" ]

[imports.functions]
"ugrd.fs.mounts" = [ "mount_root" ]

[imports.init_mount_late]
"ugrd.fs.mounts" = [ "mount_late" ]

[custom_parameters]
mounts = "dict"  # Add the mounts property, used to define the mounts to be made in the fstab
late_mounts = "dict"  # Like mounts, but run after the root is mounted
late_fstab = "str"  # The path to the late_fstab file
auto_mounts = "NoDupFlatList"  # A list of mounts to be automatically added to the mounts list
mount_wait = "bool"  # Add the mount_wait property, if defined, user input will be required before attempting to mount entries
mount_timeout = "float"  # Add the mount_timeout property, used to define the timeout for mount_wait
mount_retries = "int"  # The number of times to re-attempt mounting the fstab
mount_cmd = "str"  # The mount command called by mount_root, can be overridden
autodetect_root = "bool"  # Add the autodetect_root property, if defined, the root mount will be autodetected
autodetect_root_dm = "bool"  # Whether or not to try to autodetect device-mapper partitions
autodetect_root_luks = "bool"  # Whether or not to try to autodetect LUKS partitions
autodetect_root_lvm = "bool"  # Whether or not to try to autodetect LVM partitions
autodetect_root_raid = "bool"  # Whether or not to try to autodetect MDRAID partitions
autodetect_init_mount = "bool"  # Adds a late_mount for the init target if it exists under a mount on the host
resolve_root_dev = "bool"  # Whether or not to attempt resolve the root device source
_mounts = "dict"  # The mounts information
_vblk_info = "dict"  # Virtual block device information
_blkid_info = "dict"  # The blkid information

# Define the base of the root mount
[mounts.root]
options = ['ro']
destination = "/target_rootfs"

# Define the default mounts
# The format is mounts.mount where the mount is the name of the mount
# Alternatively, the destination option can be used to define the mount point

[mounts.proc]
type = "proc"
path = "proc"
options = ['nodev', 'noexec', 'nosuid']
base_mount = true

[mounts.sys]
type = "sysfs"
path = "sysfs"
options = ['nodev', 'noexec', 'nosuid']
base_mount = true

[mounts.dev]
type = "devtmpfs"
path = "devtmpfs"
options = ['nosuid', 'mode=0755']
base_mount = true

[mounts.run]
type = "tmpfs"
path = "tmpfs"
base_mount = true
